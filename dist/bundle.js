(()=>{"use strict";function e(e){return void 0===e&&(e="canvas"),document.getElementById(e)}function t(e){return e[Math.floor(Math.random()*e.length)]}function n(e,t,n){t.fillStyle="rgb("+n.r+", "+n.g+", "+n.b+")",t.fillRect(e.x,e.y,e.widthPixel,e.heightPixel)}function o(e,n){for(var o=[],i=0;i<Math.floor(e/2);i++)o.push(t(n));return o.slice(0).reverse().forEach((function(e){return o.push(e)})),e%2!=0&&o.splice(Math.floor(e/2),0,t(n)),o}function i(e,t,i,r,a){var l=e.x,c=e.y,d=e.widthPixel,h=e.heightPixel;console.log(e);for(var u=0;u<r;u+=1)for(var g=o(i,a),f=0;f<g.length;f+=1)n({x:l+f*d,y:c+u*h,widthPixel:d,heightPixel:h},t,g[f])}function r(){var t=e();if(t.getContext){var n=g||8,o=f||8,r=t.getContext("2d");if(r.clearRect(0,0,t.width,t.height),1===v){var a=Math.floor(t.width/n),l=t.width%n,c=Math.floor(t.height/o);i({x:l/2,y:(u=t.height%o)/2,widthPixel:a,heightPixel:a},r,n,o,m)}else{a=t.width/v,c=t.height/v;for(var d=Math.floor(a/n),h=(l=a%n,Math.floor(c/o)),u=c%o,s=0;s<v;s+=1)for(var x=0;x<v;x+=1)i({x:l/2+s*a,y:u/2+x*c,widthPixel:d,heightPixel:h},r,n,o,m)}}}function a(t,n){var o,i,r,a=n.target.value;"width"===t?(u=a,document.getElementById("widthCanvasValue").textContent=a.toString()):document.getElementById("heightCanvasValue").textContent=a.toString(),o=u,i=a,(r=e()).width=o,r.height=i}function l(e,t){var n=t.target.value;"x"===e?(g=n,document.getElementById("nbPixelXValue").textContent=n.toString()):(f=n,document.getElementById("nbPixelYValue").textContent=n.toString())}function c(){var e=[];Array.from(document.querySelectorAll("input[type=color]")).forEach((function(t,n){var o,i;document.getElementById("color-"+(n+1)).checked&&e.push((o=t.value,(i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(o))?{r:parseInt(i[1],16),g:parseInt(i[2],16),b:parseInt(i[3],16)}:null))})),m=e.slice()}function d(e){var t=e.target.value;document.getElementById("repetitionValue").textContent=t.toString(),v=t}function h(){var t=e();if(t){var n=t.toDataURL("image/png").replace("image/png","image/octet-stream");window.location.href=n}else alert("canvas not detected")}var u=0,g=0,f=0,v=1,m=[];window.onload=function(){c(),r();var e=document.getElementById("reset-button");e&&e.addEventListener("click",r);var t=document.getElementById("save-button");t&&t.addEventListener("click",h);var n=document.getElementById("widthCanvas");n&&n.addEventListener("change",(function(e){a("width",e),r()}));var o=document.getElementById("heightCanvas");o&&o.addEventListener("change",(function(e){a("height",e),r()}));var i=document.getElementById("nbPixelX");i&&i.addEventListener("change",(function(e){l("x",e),r()}));var u=document.getElementById("nbPixelY");u&&u.addEventListener("change",(function(e){l("y",e),r()}));var g=document.getElementById("repetition");g&&g.addEventListener("change",(function(e){d(e),r()})),Array.from(document.querySelectorAll("input[type=color]")).forEach((function(e){e.addEventListener("change",c)})),Array.from(document.querySelectorAll("input[type=checkbox]")).forEach((function(e){e.addEventListener("change",c)}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,